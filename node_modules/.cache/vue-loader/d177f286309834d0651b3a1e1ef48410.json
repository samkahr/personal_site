{"remainingRequest":"/Users/samkahr/personal_site/personal_site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samkahr/personal_site/personal_site/src/components/SearchPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/samkahr/personal_site/personal_site/src/components/SearchPage.vue","mtime":1555450984165},{"path":"/Users/samkahr/personal_site/personal_site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samkahr/personal_site/personal_site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/samkahr/personal_site/personal_site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samkahr/personal_site/personal_site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ItemCard from './ItemCard.vue';\nimport data from '../data/data.js';\n\nexport default {\n\tname: 'SearchPage',\n\tcomponents: {\n\t\t'item-card': ItemCard\n\t},\n\tcomputed: {\n\t\tselectedFilters: function() {\n\t\t\tlet filters = [];\n\t\t\tlet checkedFiters = this.stacks.filter(obj => obj.checked);\n\t\t\tcheckedFiters.forEach(element => {\n\t\t\t\tfilters.push(element.value);\n\t\t\t});\n\t\t\treturn filters;\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfilteredData: [],\n\t\t\tsearch: '',\n\t\t\tstacks: [\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'language'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'framework'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'frontend'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'backend'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'mobile'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'web'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'hybrid'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'database'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t},\n\tmethods: {\n\t\tgetfilteredData: function() {\n\t\t\tthis.filteredData = data;\n\t\t\tlet filteredDataByfilters = [];\n\t\t\tlet filteredDataBySearch = [];\n\t\t\t// first check if filters where selected\n\t\t\tif (this.selectedFilters.length > 0) {\n\t\t\t\tfilteredDataByfilters= this.filteredData.filter(obj => this.selectedFilters.every(val => obj.stack.indexOf(val) >= 0));\n\t\t\t\tthis.filteredData = filteredDataByfilters;\n\t\t\t}\n\t\t\t// then filter according to keyword, for now this only affects the name attribute of each data\n\t\t\tif (this.search !== '') {\n\t\t\t\tfilteredDataBySearch = this.filteredData.filter(obj => obj.name.indexOf(this.search.toLowerCase()) >= 0);\n\t\t\t\tthis.filteredData = filteredDataBySearch;\n\t\t\t}\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.getfilteredData();\n\t}\n};\n",{"version":3,"sources":["SearchPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"search-wrapper\">\n\t\t\t<!-- the search bar form -->\n      <form v-on:submit=\"getfilteredData\">\n        <div class=\"form-row\">\n          <div class=\"col-10\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter key word  ...\" v-model=\"search\" v-on:keyup=\"getfilteredData\">\n          </div>\n          <div class=\"col-2\">\n            <button type=\"submit\" class=\"btn btn-primary\"><i class=\"fa fa-search\"></i></button>\n          </div>\n        </div>\n      </form>\n\t\t\t<!-- check boxes -->\n\t\t\t<div id=\"checkboxes\">\n\t\t\t\t<div v-for=\"(stack,index) in stacks\" :key=\"index\" class=\"form-check form-check-inline\">\n\t\t\t\t\t<input class=\"form-check-input\" type=\"checkbox\"  v-model=\"stack.checked\" v-on:change=\"getfiltseredData\">\n\t\t\t\t\t<label class=\"form-check-label\">\n\t\t\t\t\t\t{{ stack.value }}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- end of checkboxes -->\n    <div class=\"card-columns\">\n\t\t\t<!-- iterate data -->\n      <item-card v-for=\"(item, index) in filteredData\" :key=\"index\" :item=\"item\"></item-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ItemCard from './ItemCard.vue';\nimport data from '../data/data.js';\n\nexport default {\n\tname: 'SearchPage',\n\tcomponents: {\n\t\t'item-card': ItemCard\n\t},\n\tcomputed: {\n\t\tselectedFilters: function() {\n\t\t\tlet filters = [];\n\t\t\tlet checkedFiters = this.stacks.filter(obj => obj.checked);\n\t\t\tcheckedFiters.forEach(element => {\n\t\t\t\tfilters.push(element.value);\n\t\t\t});\n\t\t\treturn filters;\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfilteredData: [],\n\t\t\tsearch: '',\n\t\t\tstacks: [\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'language'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'framework'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'frontend'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'backend'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'mobile'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'web'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'hybrid'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tchecked: false,\n\t\t\t\t\tvalue: 'database'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t},\n\tmethods: {\n\t\tgetfilteredData: function() {\n\t\t\tthis.filteredData = data;\n\t\t\tlet filteredDataByfilters = [];\n\t\t\tlet filteredDataBySearch = [];\n\t\t\t// first check if filters where selected\n\t\t\tif (this.selectedFilters.length > 0) {\n\t\t\t\tfilteredDataByfilters= this.filteredData.filter(obj => this.selectedFilters.every(val => obj.stack.indexOf(val) >= 0));\n\t\t\t\tthis.filteredData = filteredDataByfilters;\n\t\t\t}\n\t\t\t// then filter according to keyword, for now this only affects the name attribute of each data\n\t\t\tif (this.search !== '') {\n\t\t\t\tfilteredDataBySearch = this.filteredData.filter(obj => obj.name.indexOf(this.search.toLowerCase()) >= 0);\n\t\t\t\tthis.filteredData = filteredDataBySearch;\n\t\t\t}\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.getfilteredData();\n\t}\n};\n</script>\n"]}]}